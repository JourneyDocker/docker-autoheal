name: "Docker Publish"

permissions:
  contents: "write"

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Git Release"]
    types:
      - "completed"
  schedule:
    - cron: '45 05 * * *'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # name of image
  IMAGE: docker-autoheal
  # github.repository as <account>/<repo>
  IMAGE_NAME: tmknight88/docker-autoheal
  # Build args
  CONTEXT: .
  DISTRO: alpine
  RELEASE: stable

jobs:
  get-version:
    uses: ./.github/workflows/get-version.yml

  build:
    name: Build and push Docker image
    if: (${{ github.event.workflow_run.conclusion == 'success' }} || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule')
    needs: get-version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup QEMU for multi-arch
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=raw,enable=true,value=latest
            type=raw,enable=${{ github.event_name != 'schedule' && startsWith(github.ref_name, 'dev') }},priority=1000,value=${{ needs.get-version.outputs.pkg-version }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.CONTEXT }}
          platforms: linux/amd64,linux/arm64
          file: docker/${{ env.DISTRO }}/${{ env.RELEASE }}/${{ env.IMAGE }}.dockerfile
          # build-args: ${{ env.BUILD_ARGS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
